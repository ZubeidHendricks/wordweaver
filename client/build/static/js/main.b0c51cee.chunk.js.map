{"version":3,"sources":["components/LetterWheel.js","components/WordGrid.js","components/Adcomponent.js","components/game.js","components/Auth.js","components/Leaderboard.js","components/Notification.js","App.js","theme.js","index.js"],"names":["LetterWheel","_ref","letters","onLetterSelect","letterCount","length","springs","useTrail","from","opacity","transform","to","delay","config","mass","tension","friction","useLetterSprings","React","createElement","width","wheelRadius","height","map","spring","index","angle","Math","PI","x","cos","y","sin","animated","text","key","textAnchor","dominantBaseline","fontSize","onClick","style","cursor","WordGrid","words","completedWords","className","word","concat","includes","split","letter","letterIndex","AdComponent","adSlot","AdSense","Google","client","slot","display","format","responsive","Game","gameData","isDaily","user","showNotification","setLetters","useState","setWords","guessedWords","setGuessedWords","currentWord","setCurrentWord","score","setScore","timeLeft","setTimeLeft","gameStatus","setGameStatus","hints","setHints","showAd","setShowAd","loaded","setLoaded","useEffect","gamesPlayed","timeLimit","timer","setInterval","prevTime","endGame","clearInterval","async","axios","post","wordsGuessed","timeTaken","error","scoreSpring","useSpring","number","Paper","elevation","padding","margin","Typography","variant","Grid","container","spacing","item","xs","md","prevWord","span","val","floor","Button","color","handleWordSubmit","wordScore","prevScore","prevWords","disabled","useHint","unguessedWords","filter","randomWord","random","revealedLetter","prevHints","startGame","window","location","reload","CircularProgress","Auth","setUser","isLogin","setIsLogin","username","setUsername","password","setPassword","onSubmit","e","preventDefault","endpoint","data","localStorage","setItem","token","_error$response","_error$response$data","console","message","type","alert","response","placeholder","value","onChange","target","Leaderboard","leaderboard","setLeaderboard","get","fetchLeaderboard","entry","highScore","Notification","theme","createTheme","palette","primary","main","blue","secondary","orange","typography","fontFamily","h1","fontWeight","h2","h3","body1","button","textTransform","shape","borderRadius","overrides","MuiButton","root","MuiCard","boxShadow","props","disableElevation","App","notification","setNotification","getItem","defaults","headers","common","fetchUserData","removeItem","arguments","undefined","setTimeout","ThemeProvider","CssBaseline","Router","AppBar","position","Toolbar","flexGrow","component","Link","logout","Container","Routes","Route","path","render","Navigate","Component","rest","Object","assign","Box","mt","light","dark","contrastText","warning","info","success","background","default","paper","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0c51cee.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useTrail, animated } from 'react-spring';\r\n\r\n// Custom hook for the spring animations using useTrail\r\nconst useLetterSprings = (letters) => {\r\n  return useTrail(letters.length, {\r\n    from: { opacity: 0, transform: 'scale(0)' },\r\n    to: { opacity: 1, transform: 'scale(1)' },\r\n    delay: 200,\r\n    config: { mass: 1, tension: 120, friction: 14 },\r\n  });\r\n};\r\n\r\nconst LetterWheel = ({ letters, onLetterSelect }) => {\r\n  const wheelRadius = 150;\r\n  const letterCount = letters.length;\r\n\r\n  // Use the custom hook to get the springs for each letter\r\n  const springs = useLetterSprings(letters);\r\n\r\n  return (\r\n    <svg width={wheelRadius * 2} height={wheelRadius * 2}>\r\n      {springs.map((spring, index) => {\r\n        const angle = (index / letterCount) * 2 * Math.PI - Math.PI / 2;\r\n        const x = wheelRadius + wheelRadius * 0.7 * Math.cos(angle);\r\n        const y = wheelRadius + wheelRadius * 0.7 * Math.sin(angle);\r\n\r\n        return (\r\n          <animated.text\r\n            key={index}\r\n            x={x}\r\n            y={y}\r\n            textAnchor=\"middle\"\r\n            dominantBaseline=\"central\"\r\n            fontSize=\"24\"\r\n            onClick={() => onLetterSelect(letters[index], index)}\r\n            style={{ cursor: 'pointer', ...spring }}\r\n          >\r\n            {letters[index]}\r\n          </animated.text>\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default LetterWheel;\r\n","import React from 'react';\r\n\r\nconst WordGrid = ({ words, completedWords }) => {\r\n  return (\r\n    <div className=\"word-grid\">\r\n      {words.map((word, index) => (\r\n        <div key={index} className={`word ${completedWords.includes(word) ? 'completed' : ''}`}>\r\n          {word.split('').map((letter, letterIndex) => (\r\n            <span key={letterIndex} className=\"letter\">\r\n              {completedWords.includes(word) ? letter : '_'}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordGrid;","import React from 'react';\r\nimport AdSense from 'react-adsense';\r\n\r\nconst AdComponent = ({ adSlot }) => {\r\n  return (\r\n    <AdSense.Google\r\n      client='ca-pub-3043747446376015' \r\n      slot={adSlot}\r\n      style={{ display: 'block' }}\r\n      format='auto'\r\n      responsive='true'\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdComponent;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Typography, Button, Paper, Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport LetterWheel from './LetterWheel';\r\nimport WordGrid from './WordGrid';\r\nimport AdComponent from './Adcomponent.js';\r\n\r\n\r\nconst Game = ({ gameData, isDaily, user, showNotification }) => {\r\n  const [letters, setLetters] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n  const [guessedWords, setGuessedWords] = useState([]);\r\n  const [currentWord, setCurrentWord] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [gameStatus, setGameStatus] = useState('ready'); // 'ready', 'playing', 'finished'\r\n  const [hints, setHints] = useState(3);\r\n  const [showAd,setShowAd] =useState(false);\r\n  const [loaded,setLoaded] = useState(false);\r\n\r\n\r\nuseEffect(() => {\r\n//Show an ad every 5 games \r\nif(user.gamesPlayed % 5 === 0)\r\n{\r\nsetShowAd(true);\r\n}\r\n},[user.gamesPlayed]);\r\n \r\n\r\n  useEffect(() => {\r\n    if (gameData) {\r\n      setLetters(gameData.letters);\r\n      setWords(gameData.words);\r\n      setTimeLeft(gameData.timeLimit || 300); // Default to 5 minutes if not set\r\n      setGameStatus('ready');\r\n    }\r\n  }, [gameData]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (gameStatus === 'playing' && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && gameStatus === 'playing') {\r\n      endGame();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [gameStatus, timeLeft]);\r\n\r\n  const startGame = () => {\r\n    setGameStatus('playing');\r\n    setScore(0);\r\n    setGuessedWords([]);\r\n    setCurrentWord('');\r\n  };\r\n\r\n  const endGame = async () => {\r\n    setGameStatus('finished');\r\n    try {\r\n      await axios.post('/api/user/stats', {\r\n        score,\r\n        wordsGuessed: guessedWords.length,\r\n        timeTaken: gameData.timeLimit - timeLeft,\r\n        isDaily,\r\n      });\r\n      showNotification('Game stats updated', 'success');\r\n\r\n      //Show ad if it's time \r\n      if(user.gamesPlayed % 5 === 0) {\r\n        setShowAd(true);\r\n      }\r\n    } catch (error) {\r\n      showNotification('Error updating stats', 'error');\r\n    }\r\n  };\r\n\r\n  const handleLetterSelect = (letter) => {\r\n    setCurrentWord((prevWord) => prevWord + letter);\r\n  };\r\n\r\n  const handleWordSubmit = () => {\r\n    if (words.includes(currentWord) && !guessedWords.includes(currentWord)) {\r\n      const wordScore = currentWord.length * (isDaily ? 2 : 1); // Double points for daily challenge\r\n      setScore((prevScore) => prevScore + wordScore);\r\n      setGuessedWords((prevWords) => [...prevWords, currentWord]);\r\n      showNotification(`Word \"${currentWord}\" is correct! +${wordScore} points`, 'success');\r\n    } else if (guessedWords.includes(currentWord)) {\r\n      showNotification('Word already guessed', 'warning');\r\n    } else {\r\n      showNotification('Not a valid word', 'error');\r\n    }\r\n    setCurrentWord('');\r\n  };\r\n  \r\n\r\n \r\n  const useHint = () => {\r\n    if (hints > 0) {\r\n      const unguessedWords = words.filter((word) => !guessedWords.includes(word));\r\n      if (unguessedWords.length > 0) {\r\n        const randomWord = unguessedWords[Math.floor(Math.random() * unguessedWords.length)];\r\n        const revealedLetter = randomWord[Math.floor(Math.random() * randomWord.length)];\r\n        showNotification(`Hint: The letter \"${revealedLetter}\" is in one of the words`, 'info');\r\n        setHints((prevHints) => prevHints - 1);\r\n      }\r\n    } else {\r\n      showNotification('No hints remaining', 'warning');\r\n    }\r\n  };\r\n\r\n  const scoreSpring = useSpring({ number: score, from: { number: 0 } });\r\n\r\n  if (!gameData) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n    return (\r\n      <Paper elevation={3} style={{ padding: '20px', margin: '20px 0' }}>\r\n        <Typography variant=\"h4\">{isDaily ? 'Daily Challenge' : 'Word Weaver'}</Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <LetterWheel letters={letters} onLetterSelect={handleLetterSelect} />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <WordGrid words={words} guessedWords={guessedWords} />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography variant=\"h6\">\r\n          Score: <animated.span>{scoreSpring.number.to((val) => Math.floor(val))}</animated.span>\r\n        </Typography>\r\n        <Typography variant=\"h6\">Time Left: {timeLeft} seconds</Typography>\r\n        <Typography variant=\"h6\">Current Word: {currentWord}</Typography>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleWordSubmit} disabled={gameStatus !== 'playing'}>\r\n          Submit Word\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={useHint} disabled={gameStatus !== 'playing' || hints === 0}>\r\n          Use Hint ({hints} remaining)\r\n        </Button>\r\n        {gameStatus === 'ready' && (\r\n          <Button variant=\"contained\" color=\"primary\" onClick={startGame}>\r\n            Start Game\r\n          </Button>\r\n        )}\r\n        {showAd && (\r\n          <div style={{ margin: '20px 0' }}>\r\n            <Typography variant=\"subtitle1\">Advertisement</Typography>\r\n            <AdComponent adSlot=\"5427959914\" /> \r\n          </div>\r\n        )}\r\n        {gameStatus === 'finished' && (\r\n          <div>\r\n            <Typography variant=\"h5\">Game Over!</Typography>\r\n            <Typography variant=\"h6\">Final Score: {score}</Typography>\r\n            <Typography variant=\"h6\">Words Guessed: {guessedWords.length}</Typography>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>\r\n              Play Again\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Paper>\r\n  );\r\n};\r\n\r\nexport default Game;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Auth = ({ setUser }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const showNotification = (message, type) => {\r\n    // Implementation for showing a notification\r\n    // This can be a simple alert, console log, or any other notification library you use\r\n    alert(`${type}: ${message}`);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const endpoint = isLogin ? '/api/auth/login' : '/api/auth/register';\r\n      const { data } = await axios.post(endpoint, { username, password });\r\n      localStorage.setItem('token', data.token);\r\n      setUser(data.user);\r\n    } catch (error) {\r\n      console.error('Authentication error:', error);\r\n      showNotification(error.response?.data?.message || 'An error occurred', 'error'); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>{isLogin ? 'Login' : 'Register'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">{isLogin ? 'Login' : 'Register'}</button>\r\n      </form>\r\n      <button onClick={() => setIsLogin(!isLogin)}>\r\n        {isLogin ? 'Need to register?' : 'Already have an account?'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Leaderboard = () => {\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboard = async () => {\r\n      try {\r\n        const { data } = await axios.get('/api/leaderboard');\r\n        setLeaderboard(data);\r\n      } catch (error) {\r\n        console.error('Error fetching leaderboard:', error);\r\n      }\r\n    };\r\n    fetchLeaderboard();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"leaderboard\">\r\n      <h2>Leaderboard</h2>\r\n      <ol>\r\n        {leaderboard.map((entry, index) => (\r\n          <li key={index}>\r\n            {entry.username}: {entry.highScore}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (!message) return null;\r\n\r\n  return (\r\n    <div className={`notification ${type}`}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route,Routes, Link , Navigate} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Game from './components/game';\r\nimport Auth from './components/Auth';\r\nimport Leaderboard from './components/Leaderboard';\r\nimport Notification from './components/Notification';\r\nimport AdComponent from './components/Adcomponent.js';\r\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\r\nimport { blue, orange } from '@material-ui/core/colors';\r\nimport { CssBaseline, AppBar, Toolbar, Typography, Button, Container, Box } from '@material-ui/core';\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: blue[700],\r\n    },\r\n    secondary: {\r\n      main: orange[500],\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    h1: {\r\n      fontSize: '2.5rem',\r\n      fontWeight: 500,\r\n    },\r\n    h2: {\r\n      fontSize: '2rem',\r\n      fontWeight: 500,\r\n    },\r\n    h3: {\r\n      fontSize: '1.75rem',\r\n      fontWeight: 500,\r\n    },\r\n    body1: {\r\n      fontSize: '1rem',\r\n    },\r\n    button: {\r\n      textTransform: 'none',\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        padding: '8px 16px',\r\n      },\r\n    },\r\n    MuiCard: {\r\n      root: {\r\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    MuiButton: {\r\n      disableElevation: true,\r\n    },\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [notification, setNotification] = useState({ message: '', type: '' });\r\n  \r\n  \r\n     \r\n  useEffect(() => {  \r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      fetchUserData();\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const { data } = await axios.get('/api/user');\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      localStorage.removeItem('token');\r\n    }\r\n  };\r\n\r\n  const showNotification = (message, type = 'info') => {\r\n    setNotification({ message, type });\r\n    setTimeout(() => setNotification({ message: '', type: '' }), 3000);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    showNotification('Logged out successfully', 'success');\r\n  };\r\n\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        user ? <Component {...props} /> : <Navigate to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Router>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n              Word Weaver\r\n            </Typography>\r\n            <Button color=\"inherit\" component={Link} to=\"/game\">Game</Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/leaderboard\">Leaderboard</Button>\r\n            {user ? (\r\n              <Button color=\"inherit\" onClick={logout}>Logout</Button>\r\n            ) : (\r\n              <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Container>\r\n          <Notification message={notification.message} type={notification.type} />\r\n\r\n          <Routes>\r\n            <Route \r\n              path=\"/login\" \r\n              render={() => \r\n                user ? (\r\n                  <Navigate to=\"/game\" />\r\n                ) : (\r\n                  <Auth setUser={setUser} showNotification={showNotification} />\r\n                )\r\n              } \r\n            />\r\n            <PrivateRoute \r\n              path=\"/game\" \r\n              component={(props) => (\r\n                <Game {...props} user={user} showNotification={showNotification} />\r\n              )} \r\n            />\r\n            <Route path=\"/leaderboard\" component={Leaderboard} />\r\n            <Navigate from=\"/\" to=\"/game\" />\r\n          </Routes>\r\n\r\n          <Box mt={4}>\r\n            <AdComponent adSlot=\"5427959914\" /> \r\n          </Box>\r\n        </Container>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;","import { createTheme } from '@mui/material/styles';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1976d2', // A shade of blue\r\n      light: '#42a5f5',\r\n      dark: '#1565c0',\r\n      contrastText: '#ffffff',\r\n    },\r\n    secondary: {\r\n      main: '#dc004e', // A shade of pink\r\n      light: '#ff4081',\r\n      dark: '#9a0036',\r\n      contrastText: '#ffffff',\r\n    },\r\n    error: {\r\n      main: '#f44336', // Red\r\n    },\r\n    warning: {\r\n      main: '#ff9800', // Orange\r\n    },\r\n    info: {\r\n      main: '#2196f3', // Light Blue\r\n    },\r\n    success: {\r\n      main: '#4caf50', // Green\r\n    },\r\n    background: {\r\n      default: '#ffffff',\r\n      paper: '#f5f5f5',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    h1: {\r\n      fontSize: '2.5rem',\r\n      fontWeight: 500,\r\n    },\r\n    h2: {\r\n      fontSize: '2rem',\r\n      fontWeight: 500,\r\n    },\r\n    body1: {\r\n      fontSize: '1rem',\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  spacing: 8, // Base spacing unit\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';  // Import the theme\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}